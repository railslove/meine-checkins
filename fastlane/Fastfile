# For basics, see
# https://github.com/osamaq/reactnative-fastlane-appcenter

default_platform(:ios)

# -------------Android Build & Deploy-------------#
platform :android do
  desc "Deploy Android"
  desc "Build with code signing and upload to Google Play Internal"
  lane :deploy do |options|
    gradle(
      task: "bundleRelease",
      project_dir: "./android/",
      properties: {
        "android.injected.signing.store.file" => File.expand_path(ENV["ANDROID_KEYSTORE_PATH"]),
        "android.injected.signing.store.password" => ENV["ANDROID_STORE_PASSWORD"],
        "android.injected.signing.key.alias" => ENV["ANDROID_KEY_ALIAS"],
        "android.injected.signing.key.password" => ENV["ANDROID_KEY_PASSWORD"]
      }
    )

    upload_to_play_store(
      track: "internal",
      aab: lane_context[SharedValues::GRADLE_AAB_OUTPUT_PATH],
      skip_upload_metadata: true,
      skip_upload_images: true,
      skip_upload_screenshots: true,
      skip_upload_changelogs: true
    )
  end

  desc 'Bump, badge, deploy staging Android.'
  lane :bump_badge_deploy_staging do
    bump_badge
    deploy_staging
  end

  desc 'Bump, badge, deploy production Android.'
  lane :bump_badge_deploy_prod do
    bump_badge
    deploy_production
  end
end

# -------------iOS Sign, Build & Deploy-------------#
platform :ios do
  before_all do
    # installed via the semaphore plugin with `fastlane add_plugin semaphore`
    setup_semaphore
  end

  desc "Deploy iOS"
  desc "Build with code signing and upload to testflight"
  lane :deploy do |options|
    cocoapods(
      podfile: "./ios/Podfile"
    )

    sync_code_signing(
      username: "herbertbot@railslove.com",
      type: "appstore",
      git_user_email: "ops@railslove.com", # we are in readonly mode on ci anyways, so this doesn't need to be a real user
      git_full_name: "railslove-ops"
    )

    build_ios_app(
      workspace: "./ios/Tramling.xcworkspace",
      scheme: "Tramling",
      clean: true
    )

    upload_to_testflight(
      username: "herbertbot@railslove.com",
      skip_waiting_for_build_processing: true
    )
  end

  desc 'Bump, badge, sign, build, deploy staging iOS.'
  lane :bump_badge_deploy_staging do
    bump_badge
    deploy_staging
  end

  desc 'Bump, badge, sign, build, deploy production iOS.'
  lane :bump_badge_deploy_prod do
    bump_badge
    deploy_production
  end
end


# -------------Icons & Versioning-------------#
  desc 'Android: Increment versionCode and set versionName to package.json version.'
  package = load_json(json_path: "./package.json")
  private_lane :inc_ver_and do
    increment_version_code(
      gradle_file_path: "./android/app/build.gradle",
    )

    increment_version_name(
      gradle_file_path: "./android/app/build.gradle",
      version_name: package['version']
    )
  end


  desc 'iOS: Increment build number and set the version to package.json version.'
  private_lane :inc_ver_ios do
    increment_build_number(
      xcodeproj: './ios/' + package['name'] + '.xcodeproj'
    )
    increment_version_number(
      xcodeproj: './ios/' + package['name'] + '.xcodeproj',
      version_number: package['version']
    )
  end


  desc 'Bump build numbers, and set the display version to match the pacakage.json version.'
  private_lane :bump do
    inc_ver_ios
    inc_ver_and
  end


    # To prepare the original icon set, see:
  # https://developer.android.com/studio/write/image-asset-studio
  desc 'Android: Overwrite the current icon set with a badged version.'
  private_lane :make_badge_and do
    package = load_json(json_path: "./package.json")
    add_badge(
      shield: "DEV-" + package['version'] + "-orange",
      no_badge: true,
      dark: true,
      shield_scale: "0.55",
      shield_gravity: "Center",
      shield_geometry: "+0+30%",
      glob: "/android/app/src/main/res/mipmap-*/ic_launcher*.png",
    )
  end

  # To prepare the original icon set, you can use:
  # https://appicon.co/
  desc 'iOS: Overwrite the current icon set with a badged version.'
  private_lane :make_badge_ios do
    package = load_json(json_path: "./package.json")
    add_badge(
      shield: "DEV-" + package['version'] + "-orange",
      no_badge: true,
      dark: true,
      shield_scale: "0.85",
      shield_gravity: "South",
      shield_geometry: "+0+5%",
      glob: "/ios/" + package['name'] + "/Images.xcassets/AppIcon.appiconset/*.png",
    )
  end

  desc 'Make new versioned icon badges.'
  lane :make_badge do
    make_badge_ios
    make_badge_and
  end

  desc 'Bump and badge iOS and Android.'
  lane :bump_badge do
    bump
    make_badge
  end
