# For basics, see
# https://github.com/osamaq/reactnative-fastlane-appcenter

default_platform(:ios)

package = load_json(json_path: "./package.json")
appJSON = load_json(json_path: "./app.json")

ios_path = "./ios/#{appJSON['name']}"
app_identifier = "de.railslove.wfdcheckin"
version_number = package['version']
appicon_image_file = './src/shared/assets/App-Icon.png'

# -------------Android Build & Deploy-------------#
platform :android do
  desc "Deploy Android"
  desc "Build with code signing and upload to Google Play Internal"
  lane :deploy do |options|
    gradle(
      task: 'assemble',
      build_type: 'Release',
      project_dir: './android',
      properties: {
        "android.injected.signing.store.file" => File.expand_path(ENV["ANDROID_KEYSTORE_PATH"]),
        "android.injected.signing.store.password" => ENV["ANDROID_STORE_PASSWORD"],
        "android.injected.signing.key.alias" => ENV["ANDROID_KEY_ALIAS"],
        "android.injected.signing.key.password" => ENV["ANDROID_KEY_PASSWORD"]
      }
    )

    upload_to_play_store(
      track: "beta",
      aab: lane_context[SharedValues::GRADLE_AAB_OUTPUT_PATH],
      skip_upload_images: true,
      skip_upload_metadata: true,
      skip_upload_changelogs: true,
      skip_upload_screenshots: true
    )
  end

  desc 'Bump, badge, deploy staging Android.'
  lane :bump_badge_deploy_staging do
    bump_badge
    deploy_staging
  end

  desc 'Bump, badge, deploy production Android.'
  lane :bump_badge_deploy_prod do
    bump_badge
    deploy_production
  end
end

# -------------iOS Sign, Build & Deploy-------------#
platform :ios do
  xcversion(version: "12.5")

  before_all do
    # installed via the semaphore plugin with `fastlane add_plugin semaphore`
    setup_semaphore
  end

  desc "Deploy iOS"
  desc "Build with code signing and upload to testflight"
  lane :deploy do |options|
    username = ENV["FASTLANE_USER"]

    # match alias https://docs.fastlane.tools/actions/match/#match
    sync_code_signing(
      type: "appstore",
      username: username,
      storage_mode: "git",
      git_url: "git@github.com:railslove/match.git",
      git_full_name: "railslove-ops",
      git_user_email: username,
      app_identifier: [app_identifier]
    )

    build_ios_app(
      clean: true,
      silent: true,
      scheme: appJSON['name'],
      workspace: "#{ios_path}.xcworkspace",
      export_method: "app-store",
      configuration: "Release"
    )

    upload_to_testflight(
      username: username,
      skip_waiting_for_build_processing: true
    )
  end

  desc 'Bump, badge, sign, build, deploy staging iOS.'
  lane :bump_badge_deploy_staging do
    bump_badge
    deploy_staging
  end

  desc 'Bump, badge, sign, build, deploy production iOS.'
  lane :bump_badge_deploy_prod do
    bump_badge
    deploy_production
  end
end


# -------------Icons & Versioning-------------#
desc "Create App Icon from #{appicon_image_file}"
lane :app_icon do
  appicon(
    appicon_path: "#{ios_path}/Images.xcassets",
    appicon_devices: %i[iphone ios_marketing],
    appicon_image_file: appicon_image_file,
  )

  appicon(
    appicon_image_file: appicon_image_file,
    appicon_devices: [:universal],
    appicon_path: "#{ios_path}/Images.xcassets",
    appicon_name: 'BootSplashLogo.imageset'
  )

  android_appicon(
    appicon_path: 'android/app/src/main/res/mipmap',
    generate_rounded: true,
    appicon_image_file: appicon_image_file,
  )
end

desc 'Android: Increment versionCode and set versionName to package.json version.'
private_lane :inc_ver_and do
  increment_version_code(
    gradle_file_path: "./android/app/build.gradle",
  )

  increment_version_name(
    version_name: version_number,
    gradle_file_path: "./android/app/build.gradle"
  )
end


desc 'iOS: Increment build number and set the version to package.json version.'
private_lane :inc_ver_ios do
  increment_build_number(
    xcodeproj: "#{ios_path}.xcodeproj"
  )
  increment_version_number(
    xcodeproj: "#{ios_path}.xcodeproj",
    version_number: version_number
  )
end


desc 'Bump build numbers, and set the display version to match the pacakage.json version.'
private_lane :bump do
  inc_ver_ios
  inc_ver_and
end


  # To prepare the original icon set, see:
# https://developer.android.com/studio/write/image-asset-studio
desc 'Android: Overwrite the current icon set with a badged version.'
private_lane :make_badge_and do
  add_badge(
    shield: version_number + "-orange",
    no_badge: true,
    shield_scale: "0.5",
    shield_gravity: "Center",
    shield_geometry: "+0+60%",
    glob: "/android/app/src/main/res/mipmap-*/ic_launcher*.png",
  )
end

# To prepare the original icon set, you can use:
# https://appicon.co/
desc 'iOS: Overwrite the current icon set with a badged version.'
private_lane :make_badge_ios do
  add_badge(
    shield: version_number + "-orange",
    no_badge: true,
    shield_scale: "0.5",
    shield_gravity: "South",
    shield_geometry: "+0+5%",
    glob: "/ios/" + appJSON['name'] + "/Images.xcassets/AppIcon.appiconset/*.png",
  )
end

desc 'Make new versioned icon badges.'
lane :make_badge do
  app_icon
  make_badge_ios
  make_badge_and
end

desc 'Bump and badge iOS and Android.'
lane :bump_badge do
  bump
  make_badge
end